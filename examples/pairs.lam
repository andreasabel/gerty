-- Examples for the builtin pairs

-- Example converting a 2-arity function to a function on pairs
uncurry : (l : Level) -> (a : Type l) -> (b : Type l) -> (c : Type l) -> (a -> b -> c) -> (a * b) -> c
uncurry = \l -> \a -> \b -> \c -> \f -> \p -> let (x, y) = p in f x y

-- Example converting a function from pairs to a 2-arity function
curry : (l : Level) -> (a : Type l) -> (b : Type l) -> (c : Type l) -> (a * b -> c) -> a -> b -> c
curry = \l -> \a -> \b -> \c -> \f -> \x -> \y -> f (x, y)

pairId : (l : Level) -> (a : Type l) -> (b : Type l) -> (a * b) -> (a * b)
pairId = \l -> \a -> \b -> \p -> let (x, y) = p in (x, y)

-- Example showing the dependent tensor type
pairTy : (l1 : Level) -> (l2 : Level) -> (a : Type l1) -> (b : a -> Type l2) -> Type (lmax l1 l2)
pairTy = \l1 -> \l2 -> \a -> \b -> (x : a) * b x

-- Example showing pair construction
mkPair : (l1 : Level) -> (l2 : Level) -> (a : Type l1) -> (b : a -> Type l2) -> (x : a) -> b x -> (x : a) * b x
mkPair = \l1 -> \l2 -> \a -> \b -> \x -> \y -> (x, y)

-- The first projection
fst : (l1 l2 : Level) (a : Type l1) (b : a -> Type l2) -> (x : a) * b x -> a
fst = \l1 l2 a b p -> let (x, y) = p in x

-- First projection on non-dependent pairs
fst' : (l1 l2 : Level) (a : Type l1) (b : Type l2) -> a * b -> a
fst' = \l1 l2 a b p -> fst l1 l2 a (\x -> b) p

-- The second projection
snd : (l1 l2 : Level) (a : Type l1) (b : a -> Type l2) (p : ((x : a) * b x)) -> b (fst l1 l2 a b p)
snd = \l1 l2 a b p -> let z@(x, y) = p in (y : b (fst l1 l2 a b z))

-- Second projection on non-dependent pairs
snd' : (l1 l2 : Level) (a : Type l1) (b : Type l2) -> a * b -> b
snd' = \l1 l2 a b p -> snd l1 l2 a (\x -> b) p

-- Pair eliminator
letTen : (l1 l2 l3 : Level) (a : Type l1) (b : a -> Type l2) (c : Type l3) -> ((x : a) -> b x -> c) -> (x : a) * b x -> c
letTen = \l1 l2 l3 a b c f p -> let (x, y) = p in f x y
