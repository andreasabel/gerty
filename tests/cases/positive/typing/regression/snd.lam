fst : (a : Type 0) (b : a -> Type 0) -> <w : a * [.0, .0] b w> -> a
fst = \a b p -> case p of <x, y> -> case y of [z] -> x

snd : (a : Type 0) (b : a -> Type 0) (p : <x : a * b x>) -> b (fst a b p)
snd = \a b p -> case p as z in b (fst a b z) of <x, y> -> y

-- The checker should be able to first normalise 'fst a b p' to
-- 'case p of <x, y> -> x', then should be able to see that the 'x' in
-- '<x : a * b x>' is equivalent to this.
snd' : (a : Type 0) (b : a -> Type 0) (p : <x : a * b x>) -> b (fst a b p)
snd' = \a b p -> case p of <x, y> -> y
