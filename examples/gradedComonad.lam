counit : (a : (.0, .2) Type 0) -> (z : (.1 , .0) [.1] a) -> a
counit = \a z -> case z of [y] -> y

comult : (a : (.0, .2) Type 0) -> (z : (.1 , .0) [.6] a) -> [.2] ([.3] a)
comult = \a z -> case z of [y] -> [[y]]
